import React, { useEffect, useState } from 'react';
import { IdentifierInput } from '../../input/custom-input/identifier/identifier-input.component';
import { PatientIdentifierType, IdentifierSource } from '../../patient-registration-helper';
import styles from './../section.css';
import { FormValues } from '../../patient-registration.component';

interface IdentifierSectionProps {
  identifierTypes: PatientIdentifierType[];
  validationSchema: any;
  inEditMode: boolean;
  values: FormValues;
  setValidationSchema(value: any): void;
}

function containsSourceWithAnOption(sources: Array<IdentifierSource>): boolean {
  for (const source of sources) {
    if (source.autoGenerationOption) {
      return true;
    }
  }
  return false;
}

export const IdentifierSection: React.FC<IdentifierSectionProps> = ({
  identifierTypes,
  validationSchema,
  inEditMode,
  values,
  setValidationSchema,
}) => {
  const identifierInputs = identifierTypes
    .map(identifierType => {
      const sources = identifierType.identifierSources;
      const hasSourcesButWithoutOptions = sources.length > 0 && !containsSourceWithAnOption(sources);
      const mayOnlySupportAuto =
        sources.length == 1
          ? sources[0].autoGenerationOption
            ? !sources[0].autoGenerationOption.manualEntryEnabled
            : true
          : false;

      if (inEditMode && values[identifierType.fieldName]) {
        return null;
      }
      if (hasSourcesButWithoutOptions || mayOnlySupportAuto) {
        // identifier will be autogenerated
        identifierType.autoGenerationSource = identifierType.identifierSources[0];
        return null;
      } else {
        return (
          <IdentifierInput
            key={identifierType.fieldName}
            identifierType={identifierType}
            validationSchema={validationSchema}
            setValidationSchema={setValidationSchema}
          />
        );
      }
    })
    .filter(Boolean);

  if (identifierInputs.length > 0) {
    return (
      <section className={styles.formSection}>
        <h5 className={`omrs-type-title-5 ${styles.formSectionTitle}`}>Identifiers</h5>
        {identifierInputs}
      </section>
    );
  } else {
    return null;
  }
};
